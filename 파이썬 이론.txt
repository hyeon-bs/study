a,b=input().split('-')
print(a,b,sep='') 
공백 줄이기

y,m,d=input().split('.')
print(d,m,y,sep='-')
# -로 구분을 함

a,b=input().split(':')
print(a,b,sep=':')
# input.split(':')는 : 기준으로 자른다.
# sep=':'은 :의 기호를 사이애 두고 값 출력
# seprerator는 분류기호

a=input()
a=int(a)
print(a)

a=input()
a=float(a)
print(a)

s=input()
print(s[0:2])
# s[a:b] >> s라는 단어에서 a부터 b-1 문자까지 잘라낸 부분을 의미한다.

w1,w2=input().split()
s=w1+w2
print(s)

a=input()
n=int(a)
print('%x'% n) >> 10진수로 받고 16진수 소문자로 출력
>>x가 X로 하면 대문자

a=input()
n=int(a,16) >> 입력된 a를 16진수로 인식해 변수 n에 저장
print('%o'% n) >> n에 저장되어있는 값을 8진수형태의 문자열로 출력
				(octal)

n=ord(input()) >>입력받은 문자를 10진수로/ord는 어떤 문자를 10진수 유니코드 값으로
print(n)				변환한 후, n에 저장

c=int(input())
print(chr(c)) >>c에 저장되어 있는 정수 값을 유니코드 문자로 바꿔 출력한다.

chr( )는 정수값->문자, ord( )는 문자->정수값 형태로 바꿔주는 서로 반대 방향으로 바꾸어 주는 기능을 한다.
 
a=input()
n=int(a)
print(-n)

w, n = input().split() >>문자열 * 정수 또는 정수 * 문자열은 그 문자열을 여러 번 반복한 문자열을 만들어 준다.
print(w*int(n))

a,b=input().split()
c=int(a)**int(b) >>**는 거듭제곱을 나타냄
print(c) 

round(수, 자릿수) 를 사용하면 원하는 자리까지의 정확도로 반올림 된 실수 값을 만들어 준다. 
round(f, 2) 는 f 에 저장되어있는 수를 소수점 아래 3 번째 자리에서 반올림해서 값을 만든다.

f1,f2=input().split()
n=float(f1)/float(f2)
print('%.3f'% n) >>소수점 3자리까지 출력(반올림)

*2 를 계산한 값을 출력해도 되지만,
정수를 2배로 곱하거나 나누어 계산해 주는 비트단위시프트연산자 <<, >>를 이용할 수 있다.
컴퓨터 내부에는 2진수 형태로 값들이 저장되기 때문에,
2진수 형태로 저장되어 있는 값들을 왼쪽(<<)이나 오른쪽(>>)으로
지정한 비트 수만큼 밀어주면 2배씩 늘어나거나 1/2로 줄어드는데,

왼쪽 비트시프트(<<)가 될 때에는 오른쪽에 0이 주어진 개수만큼 추가되고,
오른쪽 비트시프트(>>)가 될 때에는 왼쪽에 0(0 또는 양의 정수인 경우)이나 1(음의 정수인 경우)이 개수만큼 추가되고,
가장 오른쪽에 있는 1비트는 사라진다.

예시
n = 10
print(n<<1)  #10을 2배 한 값인 20 이 출력된다.
print(n>>1)  #10을 반으로 나눈 값인 5 가 출력된다.
print(n<<2)  #10을 4배 한 값인 40 이 출력된다.
print(n>>2)  #10을 반으로 나눈 후 다시 반으로 나눈 값인 2 가 출력된다.

정수 10의 2진수 표현은 ... 1010 이다.
10 << 1 을 계산하면 ... 10100 이 된다 이 값은 10진수로 20이다.
10 >> 1 을 계산하면 ... 101 이 된다. 이 값은 10진수로 5이다.

n = 10 과 같이 키보드로 입력받지 않고 직접 작성해 넣은 코드에서, 숫자로 시작하는 단어(식별자, identifier)는 자동으로 수로 인식된다.  

n = 10 에서 10 은 10진수 정수 값으로 인식된다.
변수 n 에 문자열을 저장하고 싶다면, n = "10" 또는 n = '10'으로 작성해 넣으면 되고,

n = 10.0 으로 작성해 넣으면 자동으로 실수 값으로 저장된다.
n = 0o10 으로 작성해 넣으면 8진수(octal) 10으로 인식되어 10진수 8값이 저장되고,
n = 0xf 나 n = 0XF 으로 작성해 넣으면 16진수(hexadecimal) F로 인식되어 10진수 15값으로 저장된다.

** python에서 실수 값에 대한 비트시프트 연산은 허용되지 않고 오류가 발생한다.
(실수 값도 컴퓨터 내부적으로는 2진수 형태로 저장되고 비트시프트 처리가 될 수 있지만, python 에서는 허용하지 않는다.)

input()과 input().split()을 번갈아가 쓴다.

a = 2
b = 10
print(a << b)  #210 = 1024 가 출력된다.

n,m=input().split()
a=int(n)
b=int(m)
print(a<b)>>true 출력

a = bool(int(input()))
print(not a)

참고
a = bool(int(input()))
와 같은 형태로 겹쳐 작성하면, 한 번에 한 단계씩 계산/처리/평가된다.
위와 같은 명령문의 경우 input( ), int( ), bool( ) 순서로 한 번에 한 단계씩 계산/처리/평가된다.

** 비트단위(bitwise) 연산자는,
~(bitwise not), &(bitwise and), |(bitwise or), ^(bitwise xor),
<<(bitwise left shift), >>(bitwise right shift)
가 있다.
k=input()
a=int(k)
print(~a)

참고
3개의 요소로 이루어지는 3항 연산은
"x if C else y" 의 형태로 작성이 된다.
- C : True 또는 False 를 평가할 조건식(conditional expression) 또는 값
- x : C의 평가 결과가 True 일 때 사용할 값
- y : C의 평가 결과가 True 가 아닐 때 사용할 값

c=ord(input())
t=ord('a')
while t<=c:
    print(chr(t),end=' ')
    t=t+1

a=int(input())
if a>=0 & a<=100:
    for i in range(a+1):
        print(i)
>>
n=int(input())

i=0
while i<=n:
    print(i)
    i+=1

n=int(input())
s=0
for i in range(1,n+1):
    if i%2==0:
        s=s+i
print(s)

while True: >>에 대해 이론적 공부
    n=input()
    if n=='q':
        print(n)
        break
    else:
        print(n)

while True:
    n=int(input())
    sum=0
    for i in range(n+1):
        sum=sum+i
        if sum>=n:
            print(i)
            break
    break
>>
n = int(input())

s = 0
t = 0
while s<n :
  t = t+1
  s = s+t
  
print(t)

n,m=input().split()>> 오ㅔ splitㅡㄹ 쓰느지?
n=int(n)
m=int(m)
for i in range(1,n+1):
    for j in range(1,m+1):
        print(i,j)

참고
print('%X'%n)    #n에 저장되어있는 값을 16진수(hexadecimal) 형태로 출력
작은 따옴표 2개를 사용해서 print(..., sep='') 으로 출력하면, 공백없이 모두 붙여 출력된다.
작은 따옴표 2개 '' 또는 큰 따옴표 2개 "" 는 아무 문자도 없는 빈문자열(empty string)을 의미한다.

a,b,c=input().split()
R=int(a)
G=int(b)
B=int(c)

count=0
for i in range(R):
    for j in range(G):
        for k in range(B):
            count=count+1
            print(i,j,k)
print(count)>>

a=int(input(),16)
for i in range(1,16):
    print("%s*%s=%s" %(format(a,'X'),format(i,'X'),format(a*i,'X')))
>>n = int(input(), 16)

for i in range(1, 16) :
  print('%X'%n, '*%X'%i, '=%X'%(n*i), sep='')
  
'''
또는
print("%X*%X=%X"%(n,i,n*i))

'''

a=input()
a=ord(a)+1 >>아스키코드로 변환하여 +1
print(chr(a))

n = int(input())
print(min(map(int,input().split())))>>min함수 공부

w,h,b=map(int,input().split())
m=(w*h*b)/8/1024/1024

print('%.2f MB' % m)>>>소숫점 알기